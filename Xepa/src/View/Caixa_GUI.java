/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Funcionalidades_DAO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Caixa_GUI extends javax.swing.JFrame {

    
    //------------
    static int cpf;
    static String nom;
    static String email;
    String url = "jdbc:mysql://localhost/XEPA"; // enderço do BD
    String username = "root";        //nome de um usuário de seu BD
    String password = "";  // senha do BD
    //-------------
    
    
    //código---
    
    public static DefaultTableModel  produtos(ResultSet rs) {
        try {
           ResultSetMetaData metaData = rs.getMetaData();
         int numberOfColumns = metaData.getColumnCount();
            Vector columnNames = new Vector();
       // AS LINHAS ABAIXO SÃO REFERENTES AOS CAMPOS DA TABELA CLIENTE
            columnNames.addElement("Código");
            columnNames.addElement("Nome");
            columnNames.addElement("Tipo");
            columnNames.addElement("Preco");
         
            Vector rows = new Vector();
            while (rs.next()) {
                Vector newRow = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    newRow.addElement(rs.getObject(i));
                }
                rows.addElement(newRow);
            }
           return new DefaultTableModel(rows, columnNames);
       } catch (Exception e) {

           return null;
        }
        }

    
    //código---
    
    
    //codigo2---
    
    public void refresh(){
    
try{
   Connection conn;
          conn = (Connection) DriverManager.getConnection(url, username, password);
    //Controller.Conecta_BD.carregaDriver();
     
    
    System.out.println("realizado");
            String sql = "SELECT * FROM produtos;";
PreparedStatement pst = (PreparedStatement) conn.prepareStatement(sql);
ResultSet rs = pst.executeQuery();
}
catch(Exception e){
JOptionPane.showMessageDialog(null, e);
}    
    } 

    
    //codigo2---
    
    public Caixa_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("xepa?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        clientesQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Clientes c");
        clientesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clientesQuery.getResultList();
        produtosQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Produtos p");
        produtosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : produtosQuery.getResultList();
        produtosQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Produtos p");
        produtosList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : produtosQuery1.getResultList();
        produtosQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Produtos p");
        produtosList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : produtosQuery2.getResultList();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cod_pro = new org.edisoncor.gui.textField.TextField();
        jLabel3 = new javax.swing.JLabel();
        qtde_pro = new org.edisoncor.gui.textField.TextField();
        nome_cli = new org.edisoncor.gui.textField.TextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        total_TXT = new org.edisoncor.gui.textField.TextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        unit_pro = new org.edisoncor.gui.textField.TextField();
        jLabel10 = new javax.swing.JLabel();
        cpf_cli = new org.edisoncor.gui.textField.TextField();
        cpf_BTN = new org.edisoncor.gui.button.ButtonIcon();
        produto_BTN = new org.edisoncor.gui.button.ButtonIcon();
        totalizar_BTN = new org.edisoncor.gui.button.ButtonIcon();
        jScrollPane2 = new javax.swing.JScrollPane();
        produtos_table = new javax.swing.JTable();
        voltar2_BTN = new org.edisoncor.gui.button.ButtonSeven();
        buttonSeven1 = new org.edisoncor.gui.button.ButtonSeven();
        total_pro = new org.edisoncor.gui.textField.TextField();
        finalizar_BTN = new org.edisoncor.gui.button.ButtonSeven();
        jLabel4 = new javax.swing.JLabel();
        nome_pro = new org.edisoncor.gui.textField.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/caixa.png"))); // NOI18N
        panelImage1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setText("Produto:");
        panelImage1.add(jLabel1);
        jLabel1.setBounds(230, 190, 70, 20);

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setText("Cliente:");
        panelImage1.add(jLabel2);
        jLabel2.setBounds(230, 60, 70, 20);

        cod_pro.setForeground(new java.awt.Color(51, 51, 51));
        cod_pro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cod_pro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cod_proActionPerformed(evt);
            }
        });
        panelImage1.add(cod_pro);
        cod_pro.setBounds(230, 110, 90, 30);

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setText("Total do produto:");
        panelImage1.add(jLabel3);
        jLabel3.setBounds(410, 140, 140, 20);

        qtde_pro.setForeground(new java.awt.Color(51, 51, 51));
        qtde_pro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelImage1.add(qtde_pro);
        qtde_pro.setBounds(410, 110, 40, 30);

        nome_cli.setForeground(new java.awt.Color(51, 51, 51));
        nome_cli.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelImage1.add(nome_cli);
        nome_cli.setBounds(290, 60, 250, 30);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jLabel9.setText("R$");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(10, 10, 40, 30);

        total_TXT.setForeground(new java.awt.Color(0, 153, 51));
        total_TXT.setCaretColor(new java.awt.Color(0, 102, 0));
        total_TXT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(total_TXT);
        total_TXT.setBounds(40, 10, 90, 30);

        panelImage1.add(jPanel1);
        jPanel1.setBounds(280, 250, 140, 60);

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel5.setText("Quantidade:");
        panelImage1.add(jLabel5);
        jLabel5.setBounds(410, 90, 110, 20);

        jLabel7.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel7.setText("Total:");
        panelImage1.add(jLabel7);
        jLabel7.setBounds(220, 260, 70, 30);

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel6.setText("Cód. do produto:");
        panelImage1.add(jLabel6);
        jLabel6.setBounds(230, 90, 123, 20);

        unit_pro.setForeground(new java.awt.Color(51, 51, 51));
        unit_pro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelImage1.add(unit_pro);
        unit_pro.setBounds(230, 160, 120, 30);

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel10.setText("CPF:");
        panelImage1.add(jLabel10);
        jLabel10.setBounds(230, 20, 50, 20);

        cpf_cli.setForeground(new java.awt.Color(51, 51, 51));
        cpf_cli.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelImage1.add(cpf_cli);
        cpf_cli.setBounds(270, 20, 140, 30);

        cpf_BTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cliente_IMG.png"))); // NOI18N
        cpf_BTN.setText("buttonIcon1");
        cpf_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpf_BTNActionPerformed(evt);
            }
        });
        panelImage1.add(cpf_BTN);
        cpf_BTN.setBounds(420, 20, 40, 30);

        produto_BTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/carrinho_IMG.png"))); // NOI18N
        produto_BTN.setText("buttonIcon1");
        produto_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produto_BTNActionPerformed(evt);
            }
        });
        panelImage1.add(produto_BTN);
        produto_BTN.setBounds(330, 110, 30, 30);

        totalizar_BTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/qtde_IMG.png"))); // NOI18N
        totalizar_BTN.setText("buttonIcon1");
        totalizar_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalizar_BTNActionPerformed(evt);
            }
        });
        panelImage1.add(totalizar_BTN);
        totalizar_BTN.setBounds(460, 110, 30, 30);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, produtosList2, produtos_table);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codPro}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomePro}"));
        columnBinding.setColumnName("Produto");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoPro}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoPro}"));
        columnBinding.setColumnName("Preço ");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(produtos_table);

        panelImage1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 30, 190, 250);

        voltar2_BTN.setText("<-");
        voltar2_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltar2_BTNActionPerformed(evt);
            }
        });
        panelImage1.add(voltar2_BTN);
        voltar2_BTN.setBounds(30, 290, 30, 30);

        buttonSeven1.setText("Total a pagar");
        buttonSeven1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeven1ActionPerformed(evt);
            }
        });
        panelImage1.add(buttonSeven1);
        buttonSeven1.setBounds(430, 250, 130, 30);

        total_pro.setForeground(new java.awt.Color(51, 51, 51));
        total_pro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        total_pro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_proActionPerformed(evt);
            }
        });
        panelImage1.add(total_pro);
        total_pro.setBounds(410, 160, 70, 30);

        finalizar_BTN.setText("Finalizar");
        finalizar_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizar_BTNActionPerformed(evt);
            }
        });
        panelImage1.add(finalizar_BTN);
        finalizar_BTN.setBounds(430, 290, 130, 30);

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel4.setText("Preço Unitário:");
        panelImage1.add(jLabel4);
        jLabel4.setBounds(230, 140, 120, 20);

        nome_pro.setForeground(new java.awt.Color(51, 51, 51));
        nome_pro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelImage1.add(nome_pro);
        nome_pro.setBounds(230, 210, 120, 30);

        getContentPane().add(panelImage1);
        panelImage1.setBounds(0, 0, 590, 340);

        bindingGroup.bind();

        setSize(new java.awt.Dimension(590, 343));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cod_proActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cod_proActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cod_proActionPerformed

    private void cpf_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpf_BTNActionPerformed
        //--------
        
        
        
        try{     //Iniciando o possivel tratamento de erros
            //Declarando a variavel código
            int codigo = Integer.valueOf(cpf_cli.getText());
            Controller.Conecta_BD.carregaDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(Caixa_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
                String sql = "SELECT nome_cli FROM clientes where cpf_cli = "+codigo;
                // Criando variavel que executara o comando da string sql
                Statement stm = (Statement) con.createStatement();
                try//Tratamento de erro da consulta
                { //Criando variavel que exibira os resultados
                    //Executando o comando da string sql na variavel rs
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; // Variavel utilizada para saber se ha dados cadastrados

                    while (rs.next()) {  // Criando variaveis que receberão os valores do banco de dados
                        String nome = rs.getString("nome_cli");

                        i++;

                        //JOptionPane.showMessageDialog(null,"Nome: " + nome + "\nEmail: " +email + "\nTelefone: " +telefone, "Resultado",-1);
                        nome_cli.setText(String.valueOf(nome));
                        

                    }

                    if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Dado não cadastrado","Resultado",-1);

                    }

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"\nErro ao consultar!","ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            cpf_cli.setText("");
        }
        
        
        
       //--------
    }//GEN-LAST:event_cpf_BTNActionPerformed

    private void voltar2_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltar2_BTNActionPerformed
        dispose();
        new Menu_GUI().setVisible(true);
    }//GEN-LAST:event_voltar2_BTNActionPerformed

    private void produto_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produto_BTNActionPerformed
        //--------
        
        
        
        try{     //Iniciando o possivel tratamento de erros
            //Declarando a variavel código
            int codigo = Integer.valueOf(cod_pro.getText());
            Controller.Conecta_BD.carregaDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(Caixa_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
                String sql = "SELECT preco_pro, nome_pro FROM produtos where cod_pro = "+codigo;
                // Criando variavel que executara o comando da string sql
                Statement stm = (Statement) con.createStatement();
                try//Tratamento de erro da consulta
                { //Criando variavel que exibira os resultados
                    //Executando o comando da string sql na variavel rs
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; // Variavel utilizada para saber se ha dados cadastrados

                    while (rs.next()) {  // Criando variaveis que receberão os valores do banco de dados
                        String preco = rs.getString("preco_pro");
                        String nome = rs.getString("nome_pro");

                        i++;

                        //JOptionPane.showMessageDialog(null,"Nome: " + nome + "\nEmail: " +email + "\nTelefone: " +telefone, "Resultado",-1);
                        unit_pro.setText(String.valueOf(preco));
                        nome_pro.setText(String.valueOf(nome));
                        

                    }

                    if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Dado não cadastrado","Resultado",-1);

                    }

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"\nErro ao consultar!","ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            cod_pro.setText("");
        }
        
        
        
       //--------
    }//GEN-LAST:event_produto_BTNActionPerformed

    private void totalizar_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalizar_BTNActionPerformed
        Model.Funcionalidades_DAO.totalizar_funcao();
    }//GEN-LAST:event_totalizar_BTNActionPerformed

    private void buttonSeven1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeven1ActionPerformed
        Model.Funcionalidades_DAO.totalizar2_funcao();
        total_pro.setText("");
    }//GEN-LAST:event_buttonSeven1ActionPerformed

    private void total_proActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_proActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_proActionPerformed

    private void finalizar_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizar_BTNActionPerformed
       Model.Funcionalidades_DAO.finalizar_funcao();
    }//GEN-LAST:event_finalizar_BTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caixa_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caixa_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caixa_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caixa_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caixa_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonSeven buttonSeven1;
    private java.util.List<View.Clientes> clientesList;
    private javax.persistence.Query clientesQuery;
    public static org.edisoncor.gui.textField.TextField cod_pro;
    private org.edisoncor.gui.button.ButtonIcon cpf_BTN;
    public static org.edisoncor.gui.textField.TextField cpf_cli;
    private javax.persistence.EntityManager entityManager;
    private org.edisoncor.gui.button.ButtonSeven finalizar_BTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public static org.edisoncor.gui.textField.TextField nome_cli;
    public static org.edisoncor.gui.textField.TextField nome_pro;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private org.edisoncor.gui.button.ButtonIcon produto_BTN;
    private java.util.List<View.Produtos> produtosList;
    private java.util.List<View.Produtos> produtosList1;
    private java.util.List<View.Produtos> produtosList2;
    private javax.persistence.Query produtosQuery;
    private javax.persistence.Query produtosQuery1;
    private javax.persistence.Query produtosQuery2;
    private javax.swing.JTable produtos_table;
    public static org.edisoncor.gui.textField.TextField qtde_pro;
    public static org.edisoncor.gui.textField.TextField total_TXT;
    public static org.edisoncor.gui.textField.TextField total_pro;
    private org.edisoncor.gui.button.ButtonIcon totalizar_BTN;
    public static org.edisoncor.gui.textField.TextField unit_pro;
    private org.edisoncor.gui.button.ButtonSeven voltar2_BTN;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
